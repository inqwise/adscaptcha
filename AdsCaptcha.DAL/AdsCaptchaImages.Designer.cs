//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AdsCaptcha_ImagesModel", "FK_T_IMAGES_DEFORMATIONS_T_IMAGES", "T_IMAGES", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdsCaptcha.DAL.T_IMAGES), "T_IMAGES_DEFORMATIONS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdsCaptcha.DAL.T_IMAGES_DEFORMATIONS), true)]
[assembly: EdmRelationshipAttribute("AdsCaptcha_ImagesModel", "FK_T_IMAGES_T_IMAGES_TYPES", "T_IMAGES_TYPES", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdsCaptcha.DAL.T_IMAGES_TYPES), "T_IMAGES", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdsCaptcha.DAL.T_IMAGES))]
[assembly: EdmRelationshipAttribute("AdsCaptcha_ImagesModel", "FK_T_REQUESTS_IMAGES_T_IMAGES", "T_IMAGES", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdsCaptcha.DAL.T_IMAGES), "T_REQUESTS_IMAGES", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdsCaptcha.DAL.T_REQUESTS_IMAGES), true)]
[assembly: EdmRelationshipAttribute("AdsCaptcha_ImagesModel", "FK_T_IMAGES_DEFORMATIONS_T_IMAGES_DEFORMATIONS_TYPES", "T_IMAGES_DEFORMATIONS_TYPES", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdsCaptcha.DAL.T_IMAGES_DEFORMATIONS_TYPES), "T_IMAGES_DEFORMATIONS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdsCaptcha.DAL.T_IMAGES_DEFORMATIONS), true)]
[assembly: EdmRelationshipAttribute("AdsCaptcha_ImagesModel", "FK_T_DEMOS_IMAGES_T_DEMOS", "T_DEMOS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdsCaptcha.DAL.T_DEMOS), "T_DEMOS_IMAGES", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdsCaptcha.DAL.T_DEMOS_IMAGES), true)]
[assembly: EdmRelationshipAttribute("AdsCaptcha_ImagesModel", "FK_T_DEMOS_IMAGES_T_IMAGES", "T_IMAGES", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdsCaptcha.DAL.T_IMAGES), "T_DEMOS_IMAGES", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdsCaptcha.DAL.T_DEMOS_IMAGES), true)]
[assembly: EdmRelationshipAttribute("AdsCaptcha_ImagesModel", "FK_T_REQUESTS_SPEECH_ASK_T_REQUESTS_SPEECH", "T_REQUESTS_SPEECH", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AdsCaptcha.DAL.T_REQUESTS_SPEECH), "T_REQUESTS_SPEECH_ASK", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AdsCaptcha.DAL.T_REQUESTS_SPEECH_ASK))]

#endregion

namespace AdsCaptcha.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AdsCaptcha_ImagesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AdsCaptcha_ImagesEntities object using the connection string found in the 'AdsCaptcha_ImagesEntities' section of the application configuration file.
        /// </summary>
        public AdsCaptcha_ImagesEntities() : base("name=AdsCaptcha_ImagesEntities", "AdsCaptcha_ImagesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdsCaptcha_ImagesEntities object.
        /// </summary>
        public AdsCaptcha_ImagesEntities(string connectionString) : base(connectionString, "AdsCaptcha_ImagesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdsCaptcha_ImagesEntities object.
        /// </summary>
        public AdsCaptcha_ImagesEntities(EntityConnection connection) : base(connection, "AdsCaptcha_ImagesEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_IMAGES> T_IMAGES
        {
            get
            {
                if ((_T_IMAGES == null))
                {
                    _T_IMAGES = base.CreateObjectSet<T_IMAGES>("T_IMAGES");
                }
                return _T_IMAGES;
            }
        }
        private ObjectSet<T_IMAGES> _T_IMAGES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_IMAGES_DEFORMATIONS> T_IMAGES_DEFORMATIONS
        {
            get
            {
                if ((_T_IMAGES_DEFORMATIONS == null))
                {
                    _T_IMAGES_DEFORMATIONS = base.CreateObjectSet<T_IMAGES_DEFORMATIONS>("T_IMAGES_DEFORMATIONS");
                }
                return _T_IMAGES_DEFORMATIONS;
            }
        }
        private ObjectSet<T_IMAGES_DEFORMATIONS> _T_IMAGES_DEFORMATIONS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_IMAGES_DEFORMATIONS_TYPES> T_IMAGES_DEFORMATIONS_TYPES
        {
            get
            {
                if ((_T_IMAGES_DEFORMATIONS_TYPES == null))
                {
                    _T_IMAGES_DEFORMATIONS_TYPES = base.CreateObjectSet<T_IMAGES_DEFORMATIONS_TYPES>("T_IMAGES_DEFORMATIONS_TYPES");
                }
                return _T_IMAGES_DEFORMATIONS_TYPES;
            }
        }
        private ObjectSet<T_IMAGES_DEFORMATIONS_TYPES> _T_IMAGES_DEFORMATIONS_TYPES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_IMAGES_TYPES> T_IMAGES_TYPES
        {
            get
            {
                if ((_T_IMAGES_TYPES == null))
                {
                    _T_IMAGES_TYPES = base.CreateObjectSet<T_IMAGES_TYPES>("T_IMAGES_TYPES");
                }
                return _T_IMAGES_TYPES;
            }
        }
        private ObjectSet<T_IMAGES_TYPES> _T_IMAGES_TYPES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_REQUESTS_IMAGES> T_REQUESTS_IMAGES
        {
            get
            {
                if ((_T_REQUESTS_IMAGES == null))
                {
                    _T_REQUESTS_IMAGES = base.CreateObjectSet<T_REQUESTS_IMAGES>("T_REQUESTS_IMAGES");
                }
                return _T_REQUESTS_IMAGES;
            }
        }
        private ObjectSet<T_REQUESTS_IMAGES> _T_REQUESTS_IMAGES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_REQUESTS_IMAGES_ARCHIVE> T_REQUESTS_IMAGES_ARCHIVE
        {
            get
            {
                if ((_T_REQUESTS_IMAGES_ARCHIVE == null))
                {
                    _T_REQUESTS_IMAGES_ARCHIVE = base.CreateObjectSet<T_REQUESTS_IMAGES_ARCHIVE>("T_REQUESTS_IMAGES_ARCHIVE");
                }
                return _T_REQUESTS_IMAGES_ARCHIVE;
            }
        }
        private ObjectSet<T_REQUESTS_IMAGES_ARCHIVE> _T_REQUESTS_IMAGES_ARCHIVE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_DEMOS> T_DEMOS
        {
            get
            {
                if ((_T_DEMOS == null))
                {
                    _T_DEMOS = base.CreateObjectSet<T_DEMOS>("T_DEMOS");
                }
                return _T_DEMOS;
            }
        }
        private ObjectSet<T_DEMOS> _T_DEMOS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_DEMOS_IMAGES> T_DEMOS_IMAGES
        {
            get
            {
                if ((_T_DEMOS_IMAGES == null))
                {
                    _T_DEMOS_IMAGES = base.CreateObjectSet<T_DEMOS_IMAGES>("T_DEMOS_IMAGES");
                }
                return _T_DEMOS_IMAGES;
            }
        }
        private ObjectSet<T_DEMOS_IMAGES> _T_DEMOS_IMAGES;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_REQUESTS_SPEECH> T_REQUESTS_SPEECH
        {
            get
            {
                if ((_T_REQUESTS_SPEECH == null))
                {
                    _T_REQUESTS_SPEECH = base.CreateObjectSet<T_REQUESTS_SPEECH>("T_REQUESTS_SPEECH");
                }
                return _T_REQUESTS_SPEECH;
            }
        }
        private ObjectSet<T_REQUESTS_SPEECH> _T_REQUESTS_SPEECH;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<T_REQUESTS_SPEECH_ASK> T_REQUESTS_SPEECH_ASK
        {
            get
            {
                if ((_T_REQUESTS_SPEECH_ASK == null))
                {
                    _T_REQUESTS_SPEECH_ASK = base.CreateObjectSet<T_REQUESTS_SPEECH_ASK>("T_REQUESTS_SPEECH_ASK");
                }
                return _T_REQUESTS_SPEECH_ASK;
            }
        }
        private ObjectSet<T_REQUESTS_SPEECH_ASK> _T_REQUESTS_SPEECH_ASK;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_Exchange_Websites> V_Exchange_Websites
        {
            get
            {
                if ((_V_Exchange_Websites == null))
                {
                    _V_Exchange_Websites = base.CreateObjectSet<V_Exchange_Websites>("V_Exchange_Websites");
                }
                return _V_Exchange_Websites;
            }
        }
        private ObjectSet<V_Exchange_Websites> _V_Exchange_Websites;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_IMAGES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_IMAGES(T_IMAGES t_IMAGES)
        {
            base.AddObject("T_IMAGES", t_IMAGES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_IMAGES_DEFORMATIONS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_IMAGES_DEFORMATIONS(T_IMAGES_DEFORMATIONS t_IMAGES_DEFORMATIONS)
        {
            base.AddObject("T_IMAGES_DEFORMATIONS", t_IMAGES_DEFORMATIONS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_IMAGES_DEFORMATIONS_TYPES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_IMAGES_DEFORMATIONS_TYPES(T_IMAGES_DEFORMATIONS_TYPES t_IMAGES_DEFORMATIONS_TYPES)
        {
            base.AddObject("T_IMAGES_DEFORMATIONS_TYPES", t_IMAGES_DEFORMATIONS_TYPES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_IMAGES_TYPES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_IMAGES_TYPES(T_IMAGES_TYPES t_IMAGES_TYPES)
        {
            base.AddObject("T_IMAGES_TYPES", t_IMAGES_TYPES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_REQUESTS_IMAGES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_REQUESTS_IMAGES(T_REQUESTS_IMAGES t_REQUESTS_IMAGES)
        {
            base.AddObject("T_REQUESTS_IMAGES", t_REQUESTS_IMAGES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_REQUESTS_IMAGES_ARCHIVE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_REQUESTS_IMAGES_ARCHIVE(T_REQUESTS_IMAGES_ARCHIVE t_REQUESTS_IMAGES_ARCHIVE)
        {
            base.AddObject("T_REQUESTS_IMAGES_ARCHIVE", t_REQUESTS_IMAGES_ARCHIVE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_DEMOS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_DEMOS(T_DEMOS t_DEMOS)
        {
            base.AddObject("T_DEMOS", t_DEMOS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_DEMOS_IMAGES EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_DEMOS_IMAGES(T_DEMOS_IMAGES t_DEMOS_IMAGES)
        {
            base.AddObject("T_DEMOS_IMAGES", t_DEMOS_IMAGES);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_REQUESTS_SPEECH EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_REQUESTS_SPEECH(T_REQUESTS_SPEECH t_REQUESTS_SPEECH)
        {
            base.AddObject("T_REQUESTS_SPEECH", t_REQUESTS_SPEECH);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the T_REQUESTS_SPEECH_ASK EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToT_REQUESTS_SPEECH_ASK(T_REQUESTS_SPEECH_ASK t_REQUESTS_SPEECH_ASK)
        {
            base.AddObject("T_REQUESTS_SPEECH_ASK", t_REQUESTS_SPEECH_ASK);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_Exchange_Websites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_Exchange_Websites(V_Exchange_Websites v_Exchange_Websites)
        {
            base.AddObject("V_Exchange_Websites", v_Exchange_Websites);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="deformationID">No Metadata Documentation available.</param>
        /// <param name="deformationType">No Metadata Documentation available.</param>
        /// <param name="imageID">No Metadata Documentation available.</param>
        /// <param name="imageStream">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES_DEFORMATIONS> P_Images_Deformations_Insert(Nullable<global::System.Int32> deformationID, Nullable<global::System.Int32> deformationType, Nullable<global::System.Int32> imageID, global::System.Byte[] imageStream)
        {
            ObjectParameter deformationIDParameter;
            if (deformationID.HasValue)
            {
                deformationIDParameter = new ObjectParameter("DeformationID", deformationID);
            }
            else
            {
                deformationIDParameter = new ObjectParameter("DeformationID", typeof(global::System.Int32));
            }
    
            ObjectParameter deformationTypeParameter;
            if (deformationType.HasValue)
            {
                deformationTypeParameter = new ObjectParameter("DeformationType", deformationType);
            }
            else
            {
                deformationTypeParameter = new ObjectParameter("DeformationType", typeof(global::System.Int32));
            }
    
            ObjectParameter imageIDParameter;
            if (imageID.HasValue)
            {
                imageIDParameter = new ObjectParameter("ImageID", imageID);
            }
            else
            {
                imageIDParameter = new ObjectParameter("ImageID", typeof(global::System.Int32));
            }
    
            ObjectParameter imageStreamParameter;
            if (imageStream != null)
            {
                imageStreamParameter = new ObjectParameter("ImageStream", imageStream);
            }
            else
            {
                imageStreamParameter = new ObjectParameter("ImageStream", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction<T_IMAGES_DEFORMATIONS>("P_Images_Deformations_Insert", deformationIDParameter, deformationTypeParameter, imageIDParameter, imageStreamParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="deformationID">No Metadata Documentation available.</param>
        /// <param name="deformationType">No Metadata Documentation available.</param>
        /// <param name="imageID">No Metadata Documentation available.</param>
        /// <param name="imageStream">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES_DEFORMATIONS> P_Images_Deformations_Insert(Nullable<global::System.Int32> deformationID, Nullable<global::System.Int32> deformationType, Nullable<global::System.Int32> imageID, global::System.Byte[] imageStream, MergeOption mergeOption)
        {
            ObjectParameter deformationIDParameter;
            if (deformationID.HasValue)
            {
                deformationIDParameter = new ObjectParameter("DeformationID", deformationID);
            }
            else
            {
                deformationIDParameter = new ObjectParameter("DeformationID", typeof(global::System.Int32));
            }
    
            ObjectParameter deformationTypeParameter;
            if (deformationType.HasValue)
            {
                deformationTypeParameter = new ObjectParameter("DeformationType", deformationType);
            }
            else
            {
                deformationTypeParameter = new ObjectParameter("DeformationType", typeof(global::System.Int32));
            }
    
            ObjectParameter imageIDParameter;
            if (imageID.HasValue)
            {
                imageIDParameter = new ObjectParameter("ImageID", imageID);
            }
            else
            {
                imageIDParameter = new ObjectParameter("ImageID", typeof(global::System.Int32));
            }
    
            ObjectParameter imageStreamParameter;
            if (imageStream != null)
            {
                imageStreamParameter = new ObjectParameter("ImageStream", imageStream);
            }
            else
            {
                imageStreamParameter = new ObjectParameter("ImageStream", typeof(global::System.Byte[]));
            }
    
            return base.ExecuteFunction<T_IMAGES_DEFORMATIONS>("P_Images_Deformations_Insert", mergeOption, deformationIDParameter, deformationTypeParameter, imageIDParameter, imageStreamParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="requestID">No Metadata Documentation available.</param>
        /// <param name="deformationID">No Metadata Documentation available.</param>
        public ObjectResult<global::System.Byte[]> P_Images_Geformations_GetStream(global::System.String requestID, Nullable<global::System.Int32> deformationID)
        {
            ObjectParameter requestIDParameter;
            if (requestID != null)
            {
                requestIDParameter = new ObjectParameter("RequestID", requestID);
            }
            else
            {
                requestIDParameter = new ObjectParameter("RequestID", typeof(global::System.String));
            }
    
            ObjectParameter deformationIDParameter;
            if (deformationID.HasValue)
            {
                deformationIDParameter = new ObjectParameter("DeformationID", deformationID);
            }
            else
            {
                deformationIDParameter = new ObjectParameter("DeformationID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<global::System.Byte[]>("P_Images_Geformations_GetStream", requestIDParameter, deformationIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="width">No Metadata Documentation available.</param>
        /// <param name="height">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES> P_Images_GetRandomImage(Nullable<global::System.Int32> width, Nullable<global::System.Int32> height)
        {
            ObjectParameter widthParameter;
            if (width.HasValue)
            {
                widthParameter = new ObjectParameter("Width", width);
            }
            else
            {
                widthParameter = new ObjectParameter("Width", typeof(global::System.Int32));
            }
    
            ObjectParameter heightParameter;
            if (height.HasValue)
            {
                heightParameter = new ObjectParameter("Height", height);
            }
            else
            {
                heightParameter = new ObjectParameter("Height", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_IMAGES>("P_Images_GetRandomImage", widthParameter, heightParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="width">No Metadata Documentation available.</param>
        /// <param name="height">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES> P_Images_GetRandomImage(Nullable<global::System.Int32> width, Nullable<global::System.Int32> height, MergeOption mergeOption)
        {
            ObjectParameter widthParameter;
            if (width.HasValue)
            {
                widthParameter = new ObjectParameter("Width", width);
            }
            else
            {
                widthParameter = new ObjectParameter("Width", typeof(global::System.Int32));
            }
    
            ObjectParameter heightParameter;
            if (height.HasValue)
            {
                heightParameter = new ObjectParameter("Height", height);
            }
            else
            {
                heightParameter = new ObjectParameter("Height", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_IMAGES>("P_Images_GetRandomImage", mergeOption, widthParameter, heightParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="imageType">No Metadata Documentation available.</param>
        /// <param name="imageStream">No Metadata Documentation available.</param>
        /// <param name="extention">No Metadata Documentation available.</param>
        /// <param name="width">No Metadata Documentation available.</param>
        /// <param name="height">No Metadata Documentation available.</param>
        /// <param name="advertiser_Id">No Metadata Documentation available.</param>
        /// <param name="campaign_Id">No Metadata Documentation available.</param>
        /// <param name="ad_Id">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES> P_Images_Insert(Nullable<global::System.Int32> imageType, global::System.Byte[] imageStream, global::System.String extention, Nullable<global::System.Int32> width, Nullable<global::System.Int32> height, Nullable<global::System.Int32> advertiser_Id, Nullable<global::System.Int32> campaign_Id, Nullable<global::System.Int32> ad_Id)
        {
            ObjectParameter imageTypeParameter;
            if (imageType.HasValue)
            {
                imageTypeParameter = new ObjectParameter("ImageType", imageType);
            }
            else
            {
                imageTypeParameter = new ObjectParameter("ImageType", typeof(global::System.Int32));
            }
    
            ObjectParameter imageStreamParameter;
            if (imageStream != null)
            {
                imageStreamParameter = new ObjectParameter("ImageStream", imageStream);
            }
            else
            {
                imageStreamParameter = new ObjectParameter("ImageStream", typeof(global::System.Byte[]));
            }
    
            ObjectParameter extentionParameter;
            if (extention != null)
            {
                extentionParameter = new ObjectParameter("Extention", extention);
            }
            else
            {
                extentionParameter = new ObjectParameter("Extention", typeof(global::System.String));
            }
    
            ObjectParameter widthParameter;
            if (width.HasValue)
            {
                widthParameter = new ObjectParameter("Width", width);
            }
            else
            {
                widthParameter = new ObjectParameter("Width", typeof(global::System.Int32));
            }
    
            ObjectParameter heightParameter;
            if (height.HasValue)
            {
                heightParameter = new ObjectParameter("Height", height);
            }
            else
            {
                heightParameter = new ObjectParameter("Height", typeof(global::System.Int32));
            }
    
            ObjectParameter advertiser_IdParameter;
            if (advertiser_Id.HasValue)
            {
                advertiser_IdParameter = new ObjectParameter("Advertiser_Id", advertiser_Id);
            }
            else
            {
                advertiser_IdParameter = new ObjectParameter("Advertiser_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter campaign_IdParameter;
            if (campaign_Id.HasValue)
            {
                campaign_IdParameter = new ObjectParameter("Campaign_Id", campaign_Id);
            }
            else
            {
                campaign_IdParameter = new ObjectParameter("Campaign_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter ad_IdParameter;
            if (ad_Id.HasValue)
            {
                ad_IdParameter = new ObjectParameter("Ad_Id", ad_Id);
            }
            else
            {
                ad_IdParameter = new ObjectParameter("Ad_Id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_IMAGES>("P_Images_Insert", imageTypeParameter, imageStreamParameter, extentionParameter, widthParameter, heightParameter, advertiser_IdParameter, campaign_IdParameter, ad_IdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="imageType">No Metadata Documentation available.</param>
        /// <param name="imageStream">No Metadata Documentation available.</param>
        /// <param name="extention">No Metadata Documentation available.</param>
        /// <param name="width">No Metadata Documentation available.</param>
        /// <param name="height">No Metadata Documentation available.</param>
        /// <param name="advertiser_Id">No Metadata Documentation available.</param>
        /// <param name="campaign_Id">No Metadata Documentation available.</param>
        /// <param name="ad_Id">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES> P_Images_Insert(Nullable<global::System.Int32> imageType, global::System.Byte[] imageStream, global::System.String extention, Nullable<global::System.Int32> width, Nullable<global::System.Int32> height, Nullable<global::System.Int32> advertiser_Id, Nullable<global::System.Int32> campaign_Id, Nullable<global::System.Int32> ad_Id, MergeOption mergeOption)
        {
            ObjectParameter imageTypeParameter;
            if (imageType.HasValue)
            {
                imageTypeParameter = new ObjectParameter("ImageType", imageType);
            }
            else
            {
                imageTypeParameter = new ObjectParameter("ImageType", typeof(global::System.Int32));
            }
    
            ObjectParameter imageStreamParameter;
            if (imageStream != null)
            {
                imageStreamParameter = new ObjectParameter("ImageStream", imageStream);
            }
            else
            {
                imageStreamParameter = new ObjectParameter("ImageStream", typeof(global::System.Byte[]));
            }
    
            ObjectParameter extentionParameter;
            if (extention != null)
            {
                extentionParameter = new ObjectParameter("Extention", extention);
            }
            else
            {
                extentionParameter = new ObjectParameter("Extention", typeof(global::System.String));
            }
    
            ObjectParameter widthParameter;
            if (width.HasValue)
            {
                widthParameter = new ObjectParameter("Width", width);
            }
            else
            {
                widthParameter = new ObjectParameter("Width", typeof(global::System.Int32));
            }
    
            ObjectParameter heightParameter;
            if (height.HasValue)
            {
                heightParameter = new ObjectParameter("Height", height);
            }
            else
            {
                heightParameter = new ObjectParameter("Height", typeof(global::System.Int32));
            }
    
            ObjectParameter advertiser_IdParameter;
            if (advertiser_Id.HasValue)
            {
                advertiser_IdParameter = new ObjectParameter("Advertiser_Id", advertiser_Id);
            }
            else
            {
                advertiser_IdParameter = new ObjectParameter("Advertiser_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter campaign_IdParameter;
            if (campaign_Id.HasValue)
            {
                campaign_IdParameter = new ObjectParameter("Campaign_Id", campaign_Id);
            }
            else
            {
                campaign_IdParameter = new ObjectParameter("Campaign_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter ad_IdParameter;
            if (ad_Id.HasValue)
            {
                ad_IdParameter = new ObjectParameter("Ad_Id", ad_Id);
            }
            else
            {
                ad_IdParameter = new ObjectParameter("Ad_Id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_IMAGES>("P_Images_Insert", mergeOption, imageTypeParameter, imageStreamParameter, extentionParameter, widthParameter, heightParameter, advertiser_IdParameter, campaign_IdParameter, ad_IdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="requestID">No Metadata Documentation available.</param>
        /// <param name="imageID">No Metadata Documentation available.</param>
        /// <param name="challenge">No Metadata Documentation available.</param>
        /// <param name="sessionID">No Metadata Documentation available.</param>
        /// <param name="advertiser_Id">No Metadata Documentation available.</param>
        /// <param name="campaign_Id">No Metadata Documentation available.</param>
        /// <param name="ad_Id">No Metadata Documentation available.</param>
        /// <param name="publisher_Id">No Metadata Documentation available.</param>
        /// <param name="website_Id">No Metadata Documentation available.</param>
        /// <param name="captcha_Id">No Metadata Documentation available.</param>
        public ObjectResult<T_REQUESTS_IMAGES> P_Requests_Images_Insert(global::System.String requestID, Nullable<global::System.Int32> imageID, Nullable<global::System.Int32> challenge, global::System.String sessionID, Nullable<global::System.Int32> advertiser_Id, Nullable<global::System.Int32> campaign_Id, Nullable<global::System.Int32> ad_Id, Nullable<global::System.Int32> publisher_Id, Nullable<global::System.Int32> website_Id, Nullable<global::System.Int32> captcha_Id)
        {
            ObjectParameter requestIDParameter;
            if (requestID != null)
            {
                requestIDParameter = new ObjectParameter("RequestID", requestID);
            }
            else
            {
                requestIDParameter = new ObjectParameter("RequestID", typeof(global::System.String));
            }
    
            ObjectParameter imageIDParameter;
            if (imageID.HasValue)
            {
                imageIDParameter = new ObjectParameter("ImageID", imageID);
            }
            else
            {
                imageIDParameter = new ObjectParameter("ImageID", typeof(global::System.Int32));
            }
    
            ObjectParameter challengeParameter;
            if (challenge.HasValue)
            {
                challengeParameter = new ObjectParameter("Challenge", challenge);
            }
            else
            {
                challengeParameter = new ObjectParameter("Challenge", typeof(global::System.Int32));
            }
    
            ObjectParameter sessionIDParameter;
            if (sessionID != null)
            {
                sessionIDParameter = new ObjectParameter("SessionID", sessionID);
            }
            else
            {
                sessionIDParameter = new ObjectParameter("SessionID", typeof(global::System.String));
            }
    
            ObjectParameter advertiser_IdParameter;
            if (advertiser_Id.HasValue)
            {
                advertiser_IdParameter = new ObjectParameter("Advertiser_Id", advertiser_Id);
            }
            else
            {
                advertiser_IdParameter = new ObjectParameter("Advertiser_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter campaign_IdParameter;
            if (campaign_Id.HasValue)
            {
                campaign_IdParameter = new ObjectParameter("Campaign_Id", campaign_Id);
            }
            else
            {
                campaign_IdParameter = new ObjectParameter("Campaign_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter ad_IdParameter;
            if (ad_Id.HasValue)
            {
                ad_IdParameter = new ObjectParameter("Ad_Id", ad_Id);
            }
            else
            {
                ad_IdParameter = new ObjectParameter("Ad_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter publisher_IdParameter;
            if (publisher_Id.HasValue)
            {
                publisher_IdParameter = new ObjectParameter("Publisher_Id", publisher_Id);
            }
            else
            {
                publisher_IdParameter = new ObjectParameter("Publisher_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter website_IdParameter;
            if (website_Id.HasValue)
            {
                website_IdParameter = new ObjectParameter("Website_Id", website_Id);
            }
            else
            {
                website_IdParameter = new ObjectParameter("Website_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter captcha_IdParameter;
            if (captcha_Id.HasValue)
            {
                captcha_IdParameter = new ObjectParameter("Captcha_Id", captcha_Id);
            }
            else
            {
                captcha_IdParameter = new ObjectParameter("Captcha_Id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_REQUESTS_IMAGES>("P_Requests_Images_Insert", requestIDParameter, imageIDParameter, challengeParameter, sessionIDParameter, advertiser_IdParameter, campaign_IdParameter, ad_IdParameter, publisher_IdParameter, website_IdParameter, captcha_IdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="requestID">No Metadata Documentation available.</param>
        /// <param name="imageID">No Metadata Documentation available.</param>
        /// <param name="challenge">No Metadata Documentation available.</param>
        /// <param name="sessionID">No Metadata Documentation available.</param>
        /// <param name="advertiser_Id">No Metadata Documentation available.</param>
        /// <param name="campaign_Id">No Metadata Documentation available.</param>
        /// <param name="ad_Id">No Metadata Documentation available.</param>
        /// <param name="publisher_Id">No Metadata Documentation available.</param>
        /// <param name="website_Id">No Metadata Documentation available.</param>
        /// <param name="captcha_Id">No Metadata Documentation available.</param>
        public ObjectResult<T_REQUESTS_IMAGES> P_Requests_Images_Insert(global::System.String requestID, Nullable<global::System.Int32> imageID, Nullable<global::System.Int32> challenge, global::System.String sessionID, Nullable<global::System.Int32> advertiser_Id, Nullable<global::System.Int32> campaign_Id, Nullable<global::System.Int32> ad_Id, Nullable<global::System.Int32> publisher_Id, Nullable<global::System.Int32> website_Id, Nullable<global::System.Int32> captcha_Id, MergeOption mergeOption)
        {
            ObjectParameter requestIDParameter;
            if (requestID != null)
            {
                requestIDParameter = new ObjectParameter("RequestID", requestID);
            }
            else
            {
                requestIDParameter = new ObjectParameter("RequestID", typeof(global::System.String));
            }
    
            ObjectParameter imageIDParameter;
            if (imageID.HasValue)
            {
                imageIDParameter = new ObjectParameter("ImageID", imageID);
            }
            else
            {
                imageIDParameter = new ObjectParameter("ImageID", typeof(global::System.Int32));
            }
    
            ObjectParameter challengeParameter;
            if (challenge.HasValue)
            {
                challengeParameter = new ObjectParameter("Challenge", challenge);
            }
            else
            {
                challengeParameter = new ObjectParameter("Challenge", typeof(global::System.Int32));
            }
    
            ObjectParameter sessionIDParameter;
            if (sessionID != null)
            {
                sessionIDParameter = new ObjectParameter("SessionID", sessionID);
            }
            else
            {
                sessionIDParameter = new ObjectParameter("SessionID", typeof(global::System.String));
            }
    
            ObjectParameter advertiser_IdParameter;
            if (advertiser_Id.HasValue)
            {
                advertiser_IdParameter = new ObjectParameter("Advertiser_Id", advertiser_Id);
            }
            else
            {
                advertiser_IdParameter = new ObjectParameter("Advertiser_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter campaign_IdParameter;
            if (campaign_Id.HasValue)
            {
                campaign_IdParameter = new ObjectParameter("Campaign_Id", campaign_Id);
            }
            else
            {
                campaign_IdParameter = new ObjectParameter("Campaign_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter ad_IdParameter;
            if (ad_Id.HasValue)
            {
                ad_IdParameter = new ObjectParameter("Ad_Id", ad_Id);
            }
            else
            {
                ad_IdParameter = new ObjectParameter("Ad_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter publisher_IdParameter;
            if (publisher_Id.HasValue)
            {
                publisher_IdParameter = new ObjectParameter("Publisher_Id", publisher_Id);
            }
            else
            {
                publisher_IdParameter = new ObjectParameter("Publisher_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter website_IdParameter;
            if (website_Id.HasValue)
            {
                website_IdParameter = new ObjectParameter("Website_Id", website_Id);
            }
            else
            {
                website_IdParameter = new ObjectParameter("Website_Id", typeof(global::System.Int32));
            }
    
            ObjectParameter captcha_IdParameter;
            if (captcha_Id.HasValue)
            {
                captcha_IdParameter = new ObjectParameter("Captcha_Id", captcha_Id);
            }
            else
            {
                captcha_IdParameter = new ObjectParameter("Captcha_Id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_REQUESTS_IMAGES>("P_Requests_Images_Insert", mergeOption, requestIDParameter, imageIDParameter, challengeParameter, sessionIDParameter, advertiser_IdParameter, campaign_IdParameter, ad_IdParameter, publisher_IdParameter, website_IdParameter, captcha_IdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="requestID">No Metadata Documentation available.</param>
        /// <param name="challenge">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES_TYPES> P_Requests_UpdateBasicChallenge(Nullable<global::System.Int64> requestID, global::System.String challenge)
        {
            ObjectParameter requestIDParameter;
            if (requestID.HasValue)
            {
                requestIDParameter = new ObjectParameter("RequestID", requestID);
            }
            else
            {
                requestIDParameter = new ObjectParameter("RequestID", typeof(global::System.Int64));
            }
    
            ObjectParameter challengeParameter;
            if (challenge != null)
            {
                challengeParameter = new ObjectParameter("Challenge", challenge);
            }
            else
            {
                challengeParameter = new ObjectParameter("Challenge", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<T_IMAGES_TYPES>("P_Requests_UpdateBasicChallenge", requestIDParameter, challengeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="requestID">No Metadata Documentation available.</param>
        /// <param name="challenge">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES_TYPES> P_Requests_UpdateBasicChallenge(Nullable<global::System.Int64> requestID, global::System.String challenge, MergeOption mergeOption)
        {
            ObjectParameter requestIDParameter;
            if (requestID.HasValue)
            {
                requestIDParameter = new ObjectParameter("RequestID", requestID);
            }
            else
            {
                requestIDParameter = new ObjectParameter("RequestID", typeof(global::System.Int64));
            }
    
            ObjectParameter challengeParameter;
            if (challenge != null)
            {
                challengeParameter = new ObjectParameter("Challenge", challenge);
            }
            else
            {
                challengeParameter = new ObjectParameter("Challenge", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<T_IMAGES_TYPES>("P_Requests_UpdateBasicChallenge", mergeOption, requestIDParameter, challengeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="demoID">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES> P_Images_GetRandomCommercialImage(Nullable<global::System.Int32> demoID)
        {
            ObjectParameter demoIDParameter;
            if (demoID.HasValue)
            {
                demoIDParameter = new ObjectParameter("DemoID", demoID);
            }
            else
            {
                demoIDParameter = new ObjectParameter("DemoID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_IMAGES>("P_Images_GetRandomCommercialImage", demoIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="demoID">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES> P_Images_GetRandomCommercialImage(Nullable<global::System.Int32> demoID, MergeOption mergeOption)
        {
            ObjectParameter demoIDParameter;
            if (demoID.HasValue)
            {
                demoIDParameter = new ObjectParameter("DemoID", demoID);
            }
            else
            {
                demoIDParameter = new ObjectParameter("DemoID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_IMAGES>("P_Images_GetRandomCommercialImage", mergeOption, demoIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="exchangeID">No Metadata Documentation available.</param>
        /// <param name="exchangeImageID">No Metadata Documentation available.</param>
        /// <param name="exchangeImageUrl">No Metadata Documentation available.</param>
        /// <param name="exchangeImageClickUrl">No Metadata Documentation available.</param>
        /// <param name="width">No Metadata Documentation available.</param>
        /// <param name="height">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES> P_Images_GetExchangeOrRandomImage(Nullable<global::System.Int32> exchangeID, global::System.String exchangeImageID, global::System.String exchangeImageUrl, global::System.String exchangeImageClickUrl, Nullable<global::System.Int32> width, Nullable<global::System.Int32> height)
        {
            ObjectParameter exchangeIDParameter;
            if (exchangeID.HasValue)
            {
                exchangeIDParameter = new ObjectParameter("ExchangeID", exchangeID);
            }
            else
            {
                exchangeIDParameter = new ObjectParameter("ExchangeID", typeof(global::System.Int32));
            }
    
            ObjectParameter exchangeImageIDParameter;
            if (exchangeImageID != null)
            {
                exchangeImageIDParameter = new ObjectParameter("ExchangeImageID", exchangeImageID);
            }
            else
            {
                exchangeImageIDParameter = new ObjectParameter("ExchangeImageID", typeof(global::System.String));
            }
    
            ObjectParameter exchangeImageUrlParameter;
            if (exchangeImageUrl != null)
            {
                exchangeImageUrlParameter = new ObjectParameter("ExchangeImageUrl", exchangeImageUrl);
            }
            else
            {
                exchangeImageUrlParameter = new ObjectParameter("ExchangeImageUrl", typeof(global::System.String));
            }
    
            ObjectParameter exchangeImageClickUrlParameter;
            if (exchangeImageClickUrl != null)
            {
                exchangeImageClickUrlParameter = new ObjectParameter("ExchangeImageClickUrl", exchangeImageClickUrl);
            }
            else
            {
                exchangeImageClickUrlParameter = new ObjectParameter("ExchangeImageClickUrl", typeof(global::System.String));
            }
    
            ObjectParameter widthParameter;
            if (width.HasValue)
            {
                widthParameter = new ObjectParameter("Width", width);
            }
            else
            {
                widthParameter = new ObjectParameter("Width", typeof(global::System.Int32));
            }
    
            ObjectParameter heightParameter;
            if (height.HasValue)
            {
                heightParameter = new ObjectParameter("Height", height);
            }
            else
            {
                heightParameter = new ObjectParameter("Height", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_IMAGES>("P_Images_GetExchangeOrRandomImage", exchangeIDParameter, exchangeImageIDParameter, exchangeImageUrlParameter, exchangeImageClickUrlParameter, widthParameter, heightParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="exchangeID">No Metadata Documentation available.</param>
        /// <param name="exchangeImageID">No Metadata Documentation available.</param>
        /// <param name="exchangeImageUrl">No Metadata Documentation available.</param>
        /// <param name="exchangeImageClickUrl">No Metadata Documentation available.</param>
        /// <param name="width">No Metadata Documentation available.</param>
        /// <param name="height">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES> P_Images_GetExchangeOrRandomImage(Nullable<global::System.Int32> exchangeID, global::System.String exchangeImageID, global::System.String exchangeImageUrl, global::System.String exchangeImageClickUrl, Nullable<global::System.Int32> width, Nullable<global::System.Int32> height, MergeOption mergeOption)
        {
            ObjectParameter exchangeIDParameter;
            if (exchangeID.HasValue)
            {
                exchangeIDParameter = new ObjectParameter("ExchangeID", exchangeID);
            }
            else
            {
                exchangeIDParameter = new ObjectParameter("ExchangeID", typeof(global::System.Int32));
            }
    
            ObjectParameter exchangeImageIDParameter;
            if (exchangeImageID != null)
            {
                exchangeImageIDParameter = new ObjectParameter("ExchangeImageID", exchangeImageID);
            }
            else
            {
                exchangeImageIDParameter = new ObjectParameter("ExchangeImageID", typeof(global::System.String));
            }
    
            ObjectParameter exchangeImageUrlParameter;
            if (exchangeImageUrl != null)
            {
                exchangeImageUrlParameter = new ObjectParameter("ExchangeImageUrl", exchangeImageUrl);
            }
            else
            {
                exchangeImageUrlParameter = new ObjectParameter("ExchangeImageUrl", typeof(global::System.String));
            }
    
            ObjectParameter exchangeImageClickUrlParameter;
            if (exchangeImageClickUrl != null)
            {
                exchangeImageClickUrlParameter = new ObjectParameter("ExchangeImageClickUrl", exchangeImageClickUrl);
            }
            else
            {
                exchangeImageClickUrlParameter = new ObjectParameter("ExchangeImageClickUrl", typeof(global::System.String));
            }
    
            ObjectParameter widthParameter;
            if (width.HasValue)
            {
                widthParameter = new ObjectParameter("Width", width);
            }
            else
            {
                widthParameter = new ObjectParameter("Width", typeof(global::System.Int32));
            }
    
            ObjectParameter heightParameter;
            if (height.HasValue)
            {
                heightParameter = new ObjectParameter("Height", height);
            }
            else
            {
                heightParameter = new ObjectParameter("Height", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_IMAGES>("P_Images_GetExchangeOrRandomImage", mergeOption, exchangeIDParameter, exchangeImageIDParameter, exchangeImageUrlParameter, exchangeImageClickUrlParameter, widthParameter, heightParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="captchaID">No Metadata Documentation available.</param>
        /// <param name="clickUrl">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES> P_Images_GetHouseAdImage(Nullable<global::System.Int32> captchaID, ObjectParameter clickUrl)
        {
            ObjectParameter captchaIDParameter;
            if (captchaID.HasValue)
            {
                captchaIDParameter = new ObjectParameter("CaptchaID", captchaID);
            }
            else
            {
                captchaIDParameter = new ObjectParameter("CaptchaID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_IMAGES>("P_Images_GetHouseAdImage", captchaIDParameter, clickUrl);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="captchaID">No Metadata Documentation available.</param>
        /// <param name="clickUrl">No Metadata Documentation available.</param>
        public ObjectResult<T_IMAGES> P_Images_GetHouseAdImage(Nullable<global::System.Int32> captchaID, ObjectParameter clickUrl, MergeOption mergeOption)
        {
            ObjectParameter captchaIDParameter;
            if (captchaID.HasValue)
            {
                captchaIDParameter = new ObjectParameter("CaptchaID", captchaID);
            }
            else
            {
                captchaIDParameter = new ObjectParameter("CaptchaID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<T_IMAGES>("P_Images_GetHouseAdImage", mergeOption, captchaIDParameter, clickUrl);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="T_DEMOS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_DEMOS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_DEMOS object.
        /// </summary>
        /// <param name="demoID">Initial value of the DemoID property.</param>
        /// <param name="demoName">Initial value of the DemoName property.</param>
        /// <param name="demoUrlName">Initial value of the DemoUrlName property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="insertDate">Initial value of the InsertDate property.</param>
        public static T_DEMOS CreateT_DEMOS(global::System.Int32 demoID, global::System.String demoName, global::System.String demoUrlName, global::System.Boolean isDeleted, global::System.String createdBy, global::System.DateTime insertDate)
        {
            T_DEMOS t_DEMOS = new T_DEMOS();
            t_DEMOS.DemoID = demoID;
            t_DEMOS.DemoName = demoName;
            t_DEMOS.DemoUrlName = demoUrlName;
            t_DEMOS.IsDeleted = isDeleted;
            t_DEMOS.CreatedBy = createdBy;
            t_DEMOS.InsertDate = insertDate;
            return t_DEMOS;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DemoID
        {
            get
            {
                return _DemoID;
            }
            set
            {
                if (_DemoID != value)
                {
                    OnDemoIDChanging(value);
                    ReportPropertyChanging("DemoID");
                    _DemoID = StructuralObject.SetValidValue(value, "DemoID");
                    ReportPropertyChanged("DemoID");
                    OnDemoIDChanged();
                }
            }
        }
        private global::System.Int32 _DemoID;
        partial void OnDemoIDChanging(global::System.Int32 value);
        partial void OnDemoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DemoName
        {
            get
            {
                return _DemoName;
            }
            set
            {
                OnDemoNameChanging(value);
                ReportPropertyChanging("DemoName");
                _DemoName = StructuralObject.SetValidValue(value, false, "DemoName");
                ReportPropertyChanged("DemoName");
                OnDemoNameChanged();
            }
        }
        private global::System.String _DemoName;
        partial void OnDemoNameChanging(global::System.String value);
        partial void OnDemoNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DemoUrlName
        {
            get
            {
                return _DemoUrlName;
            }
            set
            {
                OnDemoUrlNameChanging(value);
                ReportPropertyChanging("DemoUrlName");
                _DemoUrlName = StructuralObject.SetValidValue(value, false, "DemoUrlName");
                ReportPropertyChanged("DemoUrlName");
                OnDemoUrlNameChanged();
            }
        }
        private global::System.String _DemoUrlName;
        partial void OnDemoUrlNameChanging(global::System.String value);
        partial void OnDemoUrlNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DemoDescription
        {
            get
            {
                return _DemoDescription;
            }
            set
            {
                OnDemoDescriptionChanging(value);
                ReportPropertyChanging("DemoDescription");
                _DemoDescription = StructuralObject.SetValidValue(value, true, "DemoDescription");
                ReportPropertyChanged("DemoDescription");
                OnDemoDescriptionChanged();
            }
        }
        private global::System.String _DemoDescription;
        partial void OnDemoDescriptionChanging(global::System.String value);
        partial void OnDemoDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private global::System.DateTime _InsertDate;
        partial void OnInsertDateChanging(global::System.DateTime value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClickUrl
        {
            get
            {
                return _ClickUrl;
            }
            set
            {
                OnClickUrlChanging(value);
                ReportPropertyChanging("ClickUrl");
                _ClickUrl = StructuralObject.SetValidValue(value, true, "ClickUrl");
                ReportPropertyChanged("ClickUrl");
                OnClickUrlChanged();
            }
        }
        private global::System.String _ClickUrl;
        partial void OnClickUrlChanging(global::System.String value);
        partial void OnClickUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LikeUrl
        {
            get
            {
                return _LikeUrl;
            }
            set
            {
                OnLikeUrlChanging(value);
                ReportPropertyChanging("LikeUrl");
                _LikeUrl = StructuralObject.SetValidValue(value, true, "LikeUrl");
                ReportPropertyChanged("LikeUrl");
                OnLikeUrlChanged();
            }
        }
        private global::System.String _LikeUrl;
        partial void OnLikeUrlChanging(global::System.String value);
        partial void OnLikeUrlChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_DEMOS_IMAGES_T_DEMOS", "T_DEMOS_IMAGES")]
        public EntityCollection<T_DEMOS_IMAGES> T_DEMOS_IMAGES
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_DEMOS_IMAGES>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_DEMOS", "T_DEMOS_IMAGES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_DEMOS_IMAGES>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_DEMOS", "T_DEMOS_IMAGES", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="T_DEMOS_IMAGES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_DEMOS_IMAGES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_DEMOS_IMAGES object.
        /// </summary>
        /// <param name="demoID">Initial value of the DemoID property.</param>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="insertDate">Initial value of the InsertDate property.</param>
        public static T_DEMOS_IMAGES CreateT_DEMOS_IMAGES(global::System.Int32 demoID, global::System.Int32 imageID, global::System.DateTime insertDate)
        {
            T_DEMOS_IMAGES t_DEMOS_IMAGES = new T_DEMOS_IMAGES();
            t_DEMOS_IMAGES.DemoID = demoID;
            t_DEMOS_IMAGES.ImageID = imageID;
            t_DEMOS_IMAGES.InsertDate = insertDate;
            return t_DEMOS_IMAGES;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DemoID
        {
            get
            {
                return _DemoID;
            }
            set
            {
                if (_DemoID != value)
                {
                    OnDemoIDChanging(value);
                    ReportPropertyChanging("DemoID");
                    _DemoID = StructuralObject.SetValidValue(value, "DemoID");
                    ReportPropertyChanged("DemoID");
                    OnDemoIDChanged();
                }
            }
        }
        private global::System.Int32 _DemoID;
        partial void OnDemoIDChanging(global::System.Int32 value);
        partial void OnDemoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value, "ImageID");
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private global::System.DateTime _InsertDate;
        partial void OnInsertDateChanging(global::System.DateTime value);
        partial void OnInsertDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_DEMOS_IMAGES_T_DEMOS", "T_DEMOS")]
        public T_DEMOS T_DEMOS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_DEMOS>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_DEMOS", "T_DEMOS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_DEMOS>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_DEMOS", "T_DEMOS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_DEMOS> T_DEMOSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_DEMOS>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_DEMOS", "T_DEMOS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_DEMOS>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_DEMOS", "T_DEMOS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_DEMOS_IMAGES_T_IMAGES", "T_IMAGES")]
        public T_IMAGES T_IMAGES
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_IMAGES", "T_IMAGES").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_IMAGES", "T_IMAGES").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_IMAGES> T_IMAGESReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_IMAGES", "T_IMAGES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_IMAGES", "T_IMAGES", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="T_IMAGES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_IMAGES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_IMAGES object.
        /// </summary>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="imageStream">Initial value of the ImageStream property.</param>
        /// <param name="insertDate">Initial value of the InsertDate property.</param>
        /// <param name="extention">Initial value of the Extention property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static T_IMAGES CreateT_IMAGES(global::System.Int32 imageID, global::System.Byte[] imageStream, global::System.DateTime insertDate, global::System.String extention, global::System.Int32 width, global::System.Int32 height, global::System.Boolean isDeleted)
        {
            T_IMAGES t_IMAGES = new T_IMAGES();
            t_IMAGES.ImageID = imageID;
            t_IMAGES.ImageStream = imageStream;
            t_IMAGES.InsertDate = insertDate;
            t_IMAGES.Extention = extention;
            t_IMAGES.Width = width;
            t_IMAGES.Height = height;
            t_IMAGES.IsDeleted = isDeleted;
            return t_IMAGES;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value, "ImageID");
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ImageStream
        {
            get
            {
                return StructuralObject.GetValidValue(_ImageStream);
            }
            set
            {
                OnImageStreamChanging(value);
                ReportPropertyChanging("ImageStream");
                _ImageStream = StructuralObject.SetValidValue(value, false, "ImageStream");
                ReportPropertyChanged("ImageStream");
                OnImageStreamChanged();
            }
        }
        private global::System.Byte[] _ImageStream;
        partial void OnImageStreamChanging(global::System.Byte[] value);
        partial void OnImageStreamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private global::System.DateTime _InsertDate;
        partial void OnInsertDateChanging(global::System.DateTime value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extention
        {
            get
            {
                return _Extention;
            }
            set
            {
                OnExtentionChanging(value);
                ReportPropertyChanging("Extention");
                _Extention = StructuralObject.SetValidValue(value, false, "Extention");
                ReportPropertyChanged("Extention");
                OnExtentionChanged();
            }
        }
        private global::System.String _Extention;
        partial void OnExtentionChanging(global::System.String value);
        partial void OnExtentionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Advertiser_Id
        {
            get
            {
                return _Advertiser_Id;
            }
            set
            {
                OnAdvertiser_IdChanging(value);
                ReportPropertyChanging("Advertiser_Id");
                _Advertiser_Id = StructuralObject.SetValidValue(value, "Advertiser_Id");
                ReportPropertyChanged("Advertiser_Id");
                OnAdvertiser_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Advertiser_Id;
        partial void OnAdvertiser_IdChanging(Nullable<global::System.Int32> value);
        partial void OnAdvertiser_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Campaign_Id
        {
            get
            {
                return _Campaign_Id;
            }
            set
            {
                OnCampaign_IdChanging(value);
                ReportPropertyChanging("Campaign_Id");
                _Campaign_Id = StructuralObject.SetValidValue(value, "Campaign_Id");
                ReportPropertyChanged("Campaign_Id");
                OnCampaign_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Campaign_Id;
        partial void OnCampaign_IdChanging(Nullable<global::System.Int32> value);
        partial void OnCampaign_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ad_Id
        {
            get
            {
                return _Ad_Id;
            }
            set
            {
                OnAd_IdChanging(value);
                ReportPropertyChanging("Ad_Id");
                _Ad_Id = StructuralObject.SetValidValue(value, "Ad_Id");
                ReportPropertyChanged("Ad_Id");
                OnAd_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Ad_Id;
        partial void OnAd_IdChanging(Nullable<global::System.Int32> value);
        partial void OnAd_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value, "Width");
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Int32 _Width;
        partial void OnWidthChanging(global::System.Int32 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value, "Height");
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Int32 _Height;
        partial void OnHeightChanging(global::System.Int32 value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_IMAGES_DEFORMATIONS_T_IMAGES", "T_IMAGES_DEFORMATIONS")]
        public EntityCollection<T_IMAGES_DEFORMATIONS> T_IMAGES_DEFORMATIONS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_IMAGES_DEFORMATIONS>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES", "T_IMAGES_DEFORMATIONS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_IMAGES_DEFORMATIONS>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES", "T_IMAGES_DEFORMATIONS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_IMAGES_T_IMAGES_TYPES", "T_IMAGES_TYPES")]
        public T_IMAGES_TYPES T_IMAGES_TYPES
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES_TYPES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_T_IMAGES_TYPES", "T_IMAGES_TYPES").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES_TYPES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_T_IMAGES_TYPES", "T_IMAGES_TYPES").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_IMAGES_TYPES> T_IMAGES_TYPESReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES_TYPES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_T_IMAGES_TYPES", "T_IMAGES_TYPES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_IMAGES_TYPES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_T_IMAGES_TYPES", "T_IMAGES_TYPES", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_REQUESTS_IMAGES_T_IMAGES", "T_REQUESTS_IMAGES")]
        public EntityCollection<T_REQUESTS_IMAGES> T_REQUESTS_IMAGES
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_REQUESTS_IMAGES>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_IMAGES_T_IMAGES", "T_REQUESTS_IMAGES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_REQUESTS_IMAGES>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_IMAGES_T_IMAGES", "T_REQUESTS_IMAGES", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_DEMOS_IMAGES_T_IMAGES", "T_DEMOS_IMAGES")]
        public EntityCollection<T_DEMOS_IMAGES> T_DEMOS_IMAGES
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_DEMOS_IMAGES>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_IMAGES", "T_DEMOS_IMAGES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_DEMOS_IMAGES>("AdsCaptcha_ImagesModel.FK_T_DEMOS_IMAGES_T_IMAGES", "T_DEMOS_IMAGES", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="T_IMAGES_DEFORMATIONS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_IMAGES_DEFORMATIONS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_IMAGES_DEFORMATIONS object.
        /// </summary>
        /// <param name="deformationID">Initial value of the DeformationID property.</param>
        /// <param name="deformationType">Initial value of the DeformationType property.</param>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="imageStream">Initial value of the ImageStream property.</param>
        public static T_IMAGES_DEFORMATIONS CreateT_IMAGES_DEFORMATIONS(global::System.Int32 deformationID, global::System.Int32 deformationType, global::System.Int32 imageID, global::System.Byte[] imageStream)
        {
            T_IMAGES_DEFORMATIONS t_IMAGES_DEFORMATIONS = new T_IMAGES_DEFORMATIONS();
            t_IMAGES_DEFORMATIONS.DeformationID = deformationID;
            t_IMAGES_DEFORMATIONS.DeformationType = deformationType;
            t_IMAGES_DEFORMATIONS.ImageID = imageID;
            t_IMAGES_DEFORMATIONS.ImageStream = imageStream;
            return t_IMAGES_DEFORMATIONS;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeformationID
        {
            get
            {
                return _DeformationID;
            }
            set
            {
                if (_DeformationID != value)
                {
                    OnDeformationIDChanging(value);
                    ReportPropertyChanging("DeformationID");
                    _DeformationID = StructuralObject.SetValidValue(value, "DeformationID");
                    ReportPropertyChanged("DeformationID");
                    OnDeformationIDChanged();
                }
            }
        }
        private global::System.Int32 _DeformationID;
        partial void OnDeformationIDChanging(global::System.Int32 value);
        partial void OnDeformationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeformationType
        {
            get
            {
                return _DeformationType;
            }
            set
            {
                if (_DeformationType != value)
                {
                    OnDeformationTypeChanging(value);
                    ReportPropertyChanging("DeformationType");
                    _DeformationType = StructuralObject.SetValidValue(value, "DeformationType");
                    ReportPropertyChanged("DeformationType");
                    OnDeformationTypeChanged();
                }
            }
        }
        private global::System.Int32 _DeformationType;
        partial void OnDeformationTypeChanging(global::System.Int32 value);
        partial void OnDeformationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value, "ImageID");
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ImageStream
        {
            get
            {
                return StructuralObject.GetValidValue(_ImageStream);
            }
            set
            {
                OnImageStreamChanging(value);
                ReportPropertyChanging("ImageStream");
                _ImageStream = StructuralObject.SetValidValue(value, false, "ImageStream");
                ReportPropertyChanged("ImageStream");
                OnImageStreamChanged();
            }
        }
        private global::System.Byte[] _ImageStream;
        partial void OnImageStreamChanging(global::System.Byte[] value);
        partial void OnImageStreamChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_IMAGES_DEFORMATIONS_T_IMAGES", "T_IMAGES")]
        public T_IMAGES T_IMAGES
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES", "T_IMAGES").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES", "T_IMAGES").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_IMAGES> T_IMAGESReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES", "T_IMAGES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES", "T_IMAGES", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_IMAGES_DEFORMATIONS_T_IMAGES_DEFORMATIONS_TYPES", "T_IMAGES_DEFORMATIONS_TYPES")]
        public T_IMAGES_DEFORMATIONS_TYPES T_IMAGES_DEFORMATIONS_TYPES
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES_DEFORMATIONS_TYPES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES_DEFORMATIONS_TYPES", "T_IMAGES_DEFORMATIONS_TYPES").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES_DEFORMATIONS_TYPES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES_DEFORMATIONS_TYPES", "T_IMAGES_DEFORMATIONS_TYPES").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_IMAGES_DEFORMATIONS_TYPES> T_IMAGES_DEFORMATIONS_TYPESReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES_DEFORMATIONS_TYPES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES_DEFORMATIONS_TYPES", "T_IMAGES_DEFORMATIONS_TYPES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_IMAGES_DEFORMATIONS_TYPES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES_DEFORMATIONS_TYPES", "T_IMAGES_DEFORMATIONS_TYPES", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="T_IMAGES_DEFORMATIONS_TYPES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_IMAGES_DEFORMATIONS_TYPES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_IMAGES_DEFORMATIONS_TYPES object.
        /// </summary>
        /// <param name="deformationTypeID">Initial value of the DeformationTypeID property.</param>
        /// <param name="deformationTypeName">Initial value of the DeformationTypeName property.</param>
        public static T_IMAGES_DEFORMATIONS_TYPES CreateT_IMAGES_DEFORMATIONS_TYPES(global::System.Int32 deformationTypeID, global::System.String deformationTypeName)
        {
            T_IMAGES_DEFORMATIONS_TYPES t_IMAGES_DEFORMATIONS_TYPES = new T_IMAGES_DEFORMATIONS_TYPES();
            t_IMAGES_DEFORMATIONS_TYPES.DeformationTypeID = deformationTypeID;
            t_IMAGES_DEFORMATIONS_TYPES.DeformationTypeName = deformationTypeName;
            return t_IMAGES_DEFORMATIONS_TYPES;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeformationTypeID
        {
            get
            {
                return _DeformationTypeID;
            }
            set
            {
                if (_DeformationTypeID != value)
                {
                    OnDeformationTypeIDChanging(value);
                    ReportPropertyChanging("DeformationTypeID");
                    _DeformationTypeID = StructuralObject.SetValidValue(value, "DeformationTypeID");
                    ReportPropertyChanged("DeformationTypeID");
                    OnDeformationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _DeformationTypeID;
        partial void OnDeformationTypeIDChanging(global::System.Int32 value);
        partial void OnDeformationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeformationTypeName
        {
            get
            {
                return _DeformationTypeName;
            }
            set
            {
                OnDeformationTypeNameChanging(value);
                ReportPropertyChanging("DeformationTypeName");
                _DeformationTypeName = StructuralObject.SetValidValue(value, false, "DeformationTypeName");
                ReportPropertyChanged("DeformationTypeName");
                OnDeformationTypeNameChanged();
            }
        }
        private global::System.String _DeformationTypeName;
        partial void OnDeformationTypeNameChanging(global::System.String value);
        partial void OnDeformationTypeNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_IMAGES_DEFORMATIONS_T_IMAGES_DEFORMATIONS_TYPES", "T_IMAGES_DEFORMATIONS")]
        public EntityCollection<T_IMAGES_DEFORMATIONS> T_IMAGES_DEFORMATIONS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_IMAGES_DEFORMATIONS>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES_DEFORMATIONS_TYPES", "T_IMAGES_DEFORMATIONS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_IMAGES_DEFORMATIONS>("AdsCaptcha_ImagesModel.FK_T_IMAGES_DEFORMATIONS_T_IMAGES_DEFORMATIONS_TYPES", "T_IMAGES_DEFORMATIONS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="T_IMAGES_TYPES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_IMAGES_TYPES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_IMAGES_TYPES object.
        /// </summary>
        /// <param name="imageTypeID">Initial value of the ImageTypeID property.</param>
        /// <param name="imageTypeName">Initial value of the ImageTypeName property.</param>
        public static T_IMAGES_TYPES CreateT_IMAGES_TYPES(global::System.Int32 imageTypeID, global::System.String imageTypeName)
        {
            T_IMAGES_TYPES t_IMAGES_TYPES = new T_IMAGES_TYPES();
            t_IMAGES_TYPES.ImageTypeID = imageTypeID;
            t_IMAGES_TYPES.ImageTypeName = imageTypeName;
            return t_IMAGES_TYPES;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageTypeID
        {
            get
            {
                return _ImageTypeID;
            }
            set
            {
                if (_ImageTypeID != value)
                {
                    OnImageTypeIDChanging(value);
                    ReportPropertyChanging("ImageTypeID");
                    _ImageTypeID = StructuralObject.SetValidValue(value, "ImageTypeID");
                    ReportPropertyChanged("ImageTypeID");
                    OnImageTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageTypeID;
        partial void OnImageTypeIDChanging(global::System.Int32 value);
        partial void OnImageTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageTypeName
        {
            get
            {
                return _ImageTypeName;
            }
            set
            {
                OnImageTypeNameChanging(value);
                ReportPropertyChanging("ImageTypeName");
                _ImageTypeName = StructuralObject.SetValidValue(value, false, "ImageTypeName");
                ReportPropertyChanged("ImageTypeName");
                OnImageTypeNameChanged();
            }
        }
        private global::System.String _ImageTypeName;
        partial void OnImageTypeNameChanging(global::System.String value);
        partial void OnImageTypeNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_IMAGES_T_IMAGES_TYPES", "T_IMAGES")]
        public EntityCollection<T_IMAGES> T_IMAGES
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_T_IMAGES_TYPES", "T_IMAGES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_IMAGES_T_IMAGES_TYPES", "T_IMAGES", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="T_REQUESTS_IMAGES")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_REQUESTS_IMAGES : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_REQUESTS_IMAGES object.
        /// </summary>
        /// <param name="requestID">Initial value of the RequestID property.</param>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="requestDate">Initial value of the RequestDate property.</param>
        /// <param name="challenge">Initial value of the Challenge property.</param>
        /// <param name="sessionID">Initial value of the SessionID property.</param>
        /// <param name="clicks">Initial value of the Clicks property.</param>
        /// <param name="fits">Initial value of the Fits property.</param>
        /// <param name="timeOver">Initial value of the TimeOver property.</param>
        /// <param name="resendNo">Initial value of the ResendNo property.</param>
        /// <param name="requestCounter">Initial value of the RequestCounter property.</param>
        public static T_REQUESTS_IMAGES CreateT_REQUESTS_IMAGES(global::System.String requestID, global::System.Int32 imageID, global::System.DateTime requestDate, global::System.Int32 challenge, global::System.String sessionID, global::System.Int32 clicks, global::System.Int32 fits, global::System.Int32 timeOver, global::System.Int32 resendNo, global::System.Int64 requestCounter)
        {
            T_REQUESTS_IMAGES t_REQUESTS_IMAGES = new T_REQUESTS_IMAGES();
            t_REQUESTS_IMAGES.RequestID = requestID;
            t_REQUESTS_IMAGES.ImageID = imageID;
            t_REQUESTS_IMAGES.RequestDate = requestDate;
            t_REQUESTS_IMAGES.Challenge = challenge;
            t_REQUESTS_IMAGES.SessionID = sessionID;
            t_REQUESTS_IMAGES.Clicks = clicks;
            t_REQUESTS_IMAGES.Fits = fits;
            t_REQUESTS_IMAGES.TimeOver = timeOver;
            t_REQUESTS_IMAGES.ResendNo = resendNo;
            t_REQUESTS_IMAGES.RequestCounter = requestCounter;
            return t_REQUESTS_IMAGES;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestID
        {
            get
            {
                return _RequestID;
            }
            set
            {
                if (_RequestID != value)
                {
                    OnRequestIDChanging(value);
                    ReportPropertyChanging("RequestID");
                    _RequestID = StructuralObject.SetValidValue(value, false, "RequestID");
                    ReportPropertyChanged("RequestID");
                    OnRequestIDChanged();
                }
            }
        }
        private global::System.String _RequestID;
        partial void OnRequestIDChanging(global::System.String value);
        partial void OnRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value, "ImageID");
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                if (_RequestDate != value)
                {
                    OnRequestDateChanging(value);
                    ReportPropertyChanging("RequestDate");
                    _RequestDate = StructuralObject.SetValidValue(value, "RequestDate");
                    ReportPropertyChanged("RequestDate");
                    OnRequestDateChanged();
                }
            }
        }
        private global::System.DateTime _RequestDate;
        partial void OnRequestDateChanging(global::System.DateTime value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Challenge
        {
            get
            {
                return _Challenge;
            }
            set
            {
                if (_Challenge != value)
                {
                    OnChallengeChanging(value);
                    ReportPropertyChanging("Challenge");
                    _Challenge = StructuralObject.SetValidValue(value, "Challenge");
                    ReportPropertyChanged("Challenge");
                    OnChallengeChanged();
                }
            }
        }
        private global::System.Int32 _Challenge;
        partial void OnChallengeChanging(global::System.Int32 value);
        partial void OnChallengeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, "Answer");
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private Nullable<global::System.Int32> _Answer;
        partial void OnAnswerChanging(Nullable<global::System.Int32> value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AnswerDate
        {
            get
            {
                return _AnswerDate;
            }
            set
            {
                OnAnswerDateChanging(value);
                ReportPropertyChanging("AnswerDate");
                _AnswerDate = StructuralObject.SetValidValue(value, "AnswerDate");
                ReportPropertyChanged("AnswerDate");
                OnAnswerDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AnswerDate;
        partial void OnAnswerDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAnswerDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                if (_SessionID != value)
                {
                    OnSessionIDChanging(value);
                    ReportPropertyChanging("SessionID");
                    _SessionID = StructuralObject.SetValidValue(value, false, "SessionID");
                    ReportPropertyChanged("SessionID");
                    OnSessionIDChanged();
                }
            }
        }
        private global::System.String _SessionID;
        partial void OnSessionIDChanging(global::System.String value);
        partial void OnSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Clicks
        {
            get
            {
                return _Clicks;
            }
            set
            {
                if (_Clicks != value)
                {
                    OnClicksChanging(value);
                    ReportPropertyChanging("Clicks");
                    _Clicks = StructuralObject.SetValidValue(value, "Clicks");
                    ReportPropertyChanged("Clicks");
                    OnClicksChanged();
                }
            }
        }
        private global::System.Int32 _Clicks;
        partial void OnClicksChanging(global::System.Int32 value);
        partial void OnClicksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Fits
        {
            get
            {
                return _Fits;
            }
            set
            {
                if (_Fits != value)
                {
                    OnFitsChanging(value);
                    ReportPropertyChanging("Fits");
                    _Fits = StructuralObject.SetValidValue(value, "Fits");
                    ReportPropertyChanged("Fits");
                    OnFitsChanged();
                }
            }
        }
        private global::System.Int32 _Fits;
        partial void OnFitsChanging(global::System.Int32 value);
        partial void OnFitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimeOver
        {
            get
            {
                return _TimeOver;
            }
            set
            {
                if (_TimeOver != value)
                {
                    OnTimeOverChanging(value);
                    ReportPropertyChanging("TimeOver");
                    _TimeOver = StructuralObject.SetValidValue(value, "TimeOver");
                    ReportPropertyChanged("TimeOver");
                    OnTimeOverChanged();
                }
            }
        }
        private global::System.Int32 _TimeOver;
        partial void OnTimeOverChanging(global::System.Int32 value);
        partial void OnTimeOverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Advertiser_Id
        {
            get
            {
                return _Advertiser_Id;
            }
            set
            {
                OnAdvertiser_IdChanging(value);
                ReportPropertyChanging("Advertiser_Id");
                _Advertiser_Id = StructuralObject.SetValidValue(value, "Advertiser_Id");
                ReportPropertyChanged("Advertiser_Id");
                OnAdvertiser_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Advertiser_Id;
        partial void OnAdvertiser_IdChanging(Nullable<global::System.Int32> value);
        partial void OnAdvertiser_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Campaign_Id
        {
            get
            {
                return _Campaign_Id;
            }
            set
            {
                OnCampaign_IdChanging(value);
                ReportPropertyChanging("Campaign_Id");
                _Campaign_Id = StructuralObject.SetValidValue(value, "Campaign_Id");
                ReportPropertyChanged("Campaign_Id");
                OnCampaign_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Campaign_Id;
        partial void OnCampaign_IdChanging(Nullable<global::System.Int32> value);
        partial void OnCampaign_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ad_Id
        {
            get
            {
                return _Ad_Id;
            }
            set
            {
                OnAd_IdChanging(value);
                ReportPropertyChanging("Ad_Id");
                _Ad_Id = StructuralObject.SetValidValue(value, "Ad_Id");
                ReportPropertyChanged("Ad_Id");
                OnAd_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Ad_Id;
        partial void OnAd_IdChanging(Nullable<global::System.Int32> value);
        partial void OnAd_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Publisher_Id
        {
            get
            {
                return _Publisher_Id;
            }
            set
            {
                OnPublisher_IdChanging(value);
                ReportPropertyChanging("Publisher_Id");
                _Publisher_Id = StructuralObject.SetValidValue(value, "Publisher_Id");
                ReportPropertyChanged("Publisher_Id");
                OnPublisher_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Publisher_Id;
        partial void OnPublisher_IdChanging(Nullable<global::System.Int32> value);
        partial void OnPublisher_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Website_Id
        {
            get
            {
                return _Website_Id;
            }
            set
            {
                OnWebsite_IdChanging(value);
                ReportPropertyChanging("Website_Id");
                _Website_Id = StructuralObject.SetValidValue(value, "Website_Id");
                ReportPropertyChanged("Website_Id");
                OnWebsite_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Website_Id;
        partial void OnWebsite_IdChanging(Nullable<global::System.Int32> value);
        partial void OnWebsite_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Captcha_Id
        {
            get
            {
                return _Captcha_Id;
            }
            set
            {
                OnCaptcha_IdChanging(value);
                ReportPropertyChanging("Captcha_Id");
                _Captcha_Id = StructuralObject.SetValidValue(value, "Captcha_Id");
                ReportPropertyChanged("Captcha_Id");
                OnCaptcha_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Captcha_Id;
        partial void OnCaptcha_IdChanging(Nullable<global::System.Int32> value);
        partial void OnCaptcha_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResendNo
        {
            get
            {
                return _ResendNo;
            }
            set
            {
                if (_ResendNo != value)
                {
                    OnResendNoChanging(value);
                    ReportPropertyChanging("ResendNo");
                    _ResendNo = StructuralObject.SetValidValue(value, "ResendNo");
                    ReportPropertyChanged("ResendNo");
                    OnResendNoChanged();
                }
            }
        }
        private global::System.Int32 _ResendNo;
        partial void OnResendNoChanging(global::System.Int32 value);
        partial void OnResendNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequestCounter
        {
            get
            {
                return _RequestCounter;
            }
            set
            {
                if (_RequestCounter != value)
                {
                    OnRequestCounterChanging(value);
                    ReportPropertyChanging("RequestCounter");
                    _RequestCounter = StructuralObject.SetValidValue(value, "RequestCounter");
                    ReportPropertyChanged("RequestCounter");
                    OnRequestCounterChanged();
                }
            }
        }
        private global::System.Int64 _RequestCounter;
        partial void OnRequestCounterChanging(global::System.Int64 value);
        partial void OnRequestCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousImageID
        {
            get
            {
                return _PreviousImageID;
            }
            set
            {
                OnPreviousImageIDChanging(value);
                ReportPropertyChanging("PreviousImageID");
                _PreviousImageID = StructuralObject.SetValidValue(value, "PreviousImageID");
                ReportPropertyChanged("PreviousImageID");
                OnPreviousImageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousImageID;
        partial void OnPreviousImageIDChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousImageIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_REQUESTS_IMAGES_T_IMAGES", "T_IMAGES")]
        public T_IMAGES T_IMAGES
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_IMAGES_T_IMAGES", "T_IMAGES").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_IMAGES_T_IMAGES", "T_IMAGES").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_IMAGES> T_IMAGESReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_IMAGES_T_IMAGES", "T_IMAGES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_IMAGES>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_IMAGES_T_IMAGES", "T_IMAGES", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="T_REQUESTS_IMAGES_ARCHIVE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_REQUESTS_IMAGES_ARCHIVE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_REQUESTS_IMAGES_ARCHIVE object.
        /// </summary>
        /// <param name="requestID">Initial value of the RequestID property.</param>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="requestDate">Initial value of the RequestDate property.</param>
        /// <param name="challenge">Initial value of the Challenge property.</param>
        /// <param name="sessionID">Initial value of the SessionID property.</param>
        /// <param name="clicks">Initial value of the Clicks property.</param>
        /// <param name="fits">Initial value of the Fits property.</param>
        /// <param name="timeOver">Initial value of the TimeOver property.</param>
        /// <param name="resendNo">Initial value of the ResendNo property.</param>
        /// <param name="requestCounter">Initial value of the RequestCounter property.</param>
        public static T_REQUESTS_IMAGES_ARCHIVE CreateT_REQUESTS_IMAGES_ARCHIVE(global::System.String requestID, global::System.Int32 imageID, global::System.DateTime requestDate, global::System.Int32 challenge, global::System.String sessionID, global::System.Int32 clicks, global::System.Int32 fits, global::System.Int32 timeOver, global::System.Int32 resendNo, global::System.Int64 requestCounter)
        {
            T_REQUESTS_IMAGES_ARCHIVE t_REQUESTS_IMAGES_ARCHIVE = new T_REQUESTS_IMAGES_ARCHIVE();
            t_REQUESTS_IMAGES_ARCHIVE.RequestID = requestID;
            t_REQUESTS_IMAGES_ARCHIVE.ImageID = imageID;
            t_REQUESTS_IMAGES_ARCHIVE.RequestDate = requestDate;
            t_REQUESTS_IMAGES_ARCHIVE.Challenge = challenge;
            t_REQUESTS_IMAGES_ARCHIVE.SessionID = sessionID;
            t_REQUESTS_IMAGES_ARCHIVE.Clicks = clicks;
            t_REQUESTS_IMAGES_ARCHIVE.Fits = fits;
            t_REQUESTS_IMAGES_ARCHIVE.TimeOver = timeOver;
            t_REQUESTS_IMAGES_ARCHIVE.ResendNo = resendNo;
            t_REQUESTS_IMAGES_ARCHIVE.RequestCounter = requestCounter;
            return t_REQUESTS_IMAGES_ARCHIVE;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestID
        {
            get
            {
                return _RequestID;
            }
            set
            {
                if (_RequestID != value)
                {
                    OnRequestIDChanging(value);
                    ReportPropertyChanging("RequestID");
                    _RequestID = StructuralObject.SetValidValue(value, false, "RequestID");
                    ReportPropertyChanged("RequestID");
                    OnRequestIDChanged();
                }
            }
        }
        private global::System.String _RequestID;
        partial void OnRequestIDChanging(global::System.String value);
        partial void OnRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                OnImageIDChanging(value);
                ReportPropertyChanging("ImageID");
                _ImageID = StructuralObject.SetValidValue(value, "ImageID");
                ReportPropertyChanged("ImageID");
                OnImageIDChanged();
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                OnRequestDateChanging(value);
                ReportPropertyChanging("RequestDate");
                _RequestDate = StructuralObject.SetValidValue(value, "RequestDate");
                ReportPropertyChanged("RequestDate");
                OnRequestDateChanged();
            }
        }
        private global::System.DateTime _RequestDate;
        partial void OnRequestDateChanging(global::System.DateTime value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Challenge
        {
            get
            {
                return _Challenge;
            }
            set
            {
                OnChallengeChanging(value);
                ReportPropertyChanging("Challenge");
                _Challenge = StructuralObject.SetValidValue(value, "Challenge");
                ReportPropertyChanged("Challenge");
                OnChallengeChanged();
            }
        }
        private global::System.Int32 _Challenge;
        partial void OnChallengeChanging(global::System.Int32 value);
        partial void OnChallengeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, "Answer");
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private Nullable<global::System.Int32> _Answer;
        partial void OnAnswerChanging(Nullable<global::System.Int32> value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AnswerDate
        {
            get
            {
                return _AnswerDate;
            }
            set
            {
                OnAnswerDateChanging(value);
                ReportPropertyChanging("AnswerDate");
                _AnswerDate = StructuralObject.SetValidValue(value, "AnswerDate");
                ReportPropertyChanged("AnswerDate");
                OnAnswerDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AnswerDate;
        partial void OnAnswerDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAnswerDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                OnSessionIDChanging(value);
                ReportPropertyChanging("SessionID");
                _SessionID = StructuralObject.SetValidValue(value, false, "SessionID");
                ReportPropertyChanged("SessionID");
                OnSessionIDChanged();
            }
        }
        private global::System.String _SessionID;
        partial void OnSessionIDChanging(global::System.String value);
        partial void OnSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Clicks
        {
            get
            {
                return _Clicks;
            }
            set
            {
                OnClicksChanging(value);
                ReportPropertyChanging("Clicks");
                _Clicks = StructuralObject.SetValidValue(value, "Clicks");
                ReportPropertyChanged("Clicks");
                OnClicksChanged();
            }
        }
        private global::System.Int32 _Clicks;
        partial void OnClicksChanging(global::System.Int32 value);
        partial void OnClicksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Fits
        {
            get
            {
                return _Fits;
            }
            set
            {
                OnFitsChanging(value);
                ReportPropertyChanging("Fits");
                _Fits = StructuralObject.SetValidValue(value, "Fits");
                ReportPropertyChanged("Fits");
                OnFitsChanged();
            }
        }
        private global::System.Int32 _Fits;
        partial void OnFitsChanging(global::System.Int32 value);
        partial void OnFitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimeOver
        {
            get
            {
                return _TimeOver;
            }
            set
            {
                OnTimeOverChanging(value);
                ReportPropertyChanging("TimeOver");
                _TimeOver = StructuralObject.SetValidValue(value, "TimeOver");
                ReportPropertyChanged("TimeOver");
                OnTimeOverChanged();
            }
        }
        private global::System.Int32 _TimeOver;
        partial void OnTimeOverChanging(global::System.Int32 value);
        partial void OnTimeOverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Advertiser_Id
        {
            get
            {
                return _Advertiser_Id;
            }
            set
            {
                OnAdvertiser_IdChanging(value);
                ReportPropertyChanging("Advertiser_Id");
                _Advertiser_Id = StructuralObject.SetValidValue(value, "Advertiser_Id");
                ReportPropertyChanged("Advertiser_Id");
                OnAdvertiser_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Advertiser_Id;
        partial void OnAdvertiser_IdChanging(Nullable<global::System.Int32> value);
        partial void OnAdvertiser_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Campaign_Id
        {
            get
            {
                return _Campaign_Id;
            }
            set
            {
                OnCampaign_IdChanging(value);
                ReportPropertyChanging("Campaign_Id");
                _Campaign_Id = StructuralObject.SetValidValue(value, "Campaign_Id");
                ReportPropertyChanged("Campaign_Id");
                OnCampaign_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Campaign_Id;
        partial void OnCampaign_IdChanging(Nullable<global::System.Int32> value);
        partial void OnCampaign_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Ad_Id
        {
            get
            {
                return _Ad_Id;
            }
            set
            {
                OnAd_IdChanging(value);
                ReportPropertyChanging("Ad_Id");
                _Ad_Id = StructuralObject.SetValidValue(value, "Ad_Id");
                ReportPropertyChanged("Ad_Id");
                OnAd_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Ad_Id;
        partial void OnAd_IdChanging(Nullable<global::System.Int32> value);
        partial void OnAd_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Publisher_Id
        {
            get
            {
                return _Publisher_Id;
            }
            set
            {
                OnPublisher_IdChanging(value);
                ReportPropertyChanging("Publisher_Id");
                _Publisher_Id = StructuralObject.SetValidValue(value, "Publisher_Id");
                ReportPropertyChanged("Publisher_Id");
                OnPublisher_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Publisher_Id;
        partial void OnPublisher_IdChanging(Nullable<global::System.Int32> value);
        partial void OnPublisher_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Website_Id
        {
            get
            {
                return _Website_Id;
            }
            set
            {
                OnWebsite_IdChanging(value);
                ReportPropertyChanging("Website_Id");
                _Website_Id = StructuralObject.SetValidValue(value, "Website_Id");
                ReportPropertyChanged("Website_Id");
                OnWebsite_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Website_Id;
        partial void OnWebsite_IdChanging(Nullable<global::System.Int32> value);
        partial void OnWebsite_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Captcha_Id
        {
            get
            {
                return _Captcha_Id;
            }
            set
            {
                OnCaptcha_IdChanging(value);
                ReportPropertyChanging("Captcha_Id");
                _Captcha_Id = StructuralObject.SetValidValue(value, "Captcha_Id");
                ReportPropertyChanged("Captcha_Id");
                OnCaptcha_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Captcha_Id;
        partial void OnCaptcha_IdChanging(Nullable<global::System.Int32> value);
        partial void OnCaptcha_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResendNo
        {
            get
            {
                return _ResendNo;
            }
            set
            {
                OnResendNoChanging(value);
                ReportPropertyChanging("ResendNo");
                _ResendNo = StructuralObject.SetValidValue(value, "ResendNo");
                ReportPropertyChanged("ResendNo");
                OnResendNoChanged();
            }
        }
        private global::System.Int32 _ResendNo;
        partial void OnResendNoChanging(global::System.Int32 value);
        partial void OnResendNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RequestCounter
        {
            get
            {
                return _RequestCounter;
            }
            set
            {
                OnRequestCounterChanging(value);
                ReportPropertyChanging("RequestCounter");
                _RequestCounter = StructuralObject.SetValidValue(value, "RequestCounter");
                ReportPropertyChanged("RequestCounter");
                OnRequestCounterChanged();
            }
        }
        private global::System.Int64 _RequestCounter;
        partial void OnRequestCounterChanging(global::System.Int64 value);
        partial void OnRequestCounterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PreviousImageID
        {
            get
            {
                return _PreviousImageID;
            }
            set
            {
                OnPreviousImageIDChanging(value);
                ReportPropertyChanging("PreviousImageID");
                _PreviousImageID = StructuralObject.SetValidValue(value, "PreviousImageID");
                ReportPropertyChanged("PreviousImageID");
                OnPreviousImageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PreviousImageID;
        partial void OnPreviousImageIDChanging(Nullable<global::System.Int32> value);
        partial void OnPreviousImageIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="T_REQUESTS_SPEECH")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_REQUESTS_SPEECH : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_REQUESTS_SPEECH object.
        /// </summary>
        /// <param name="speechID">Initial value of the SpeechID property.</param>
        /// <param name="requestID">Initial value of the RequestID property.</param>
        /// <param name="sessionID">Initial value of the SessionID property.</param>
        /// <param name="insertDate">Initial value of the InsertDate property.</param>
        /// <param name="isBlocked">Initial value of the IsBlocked property.</param>
        public static T_REQUESTS_SPEECH CreateT_REQUESTS_SPEECH(global::System.Int64 speechID, global::System.String requestID, global::System.String sessionID, global::System.DateTime insertDate, global::System.Boolean isBlocked)
        {
            T_REQUESTS_SPEECH t_REQUESTS_SPEECH = new T_REQUESTS_SPEECH();
            t_REQUESTS_SPEECH.SpeechID = speechID;
            t_REQUESTS_SPEECH.RequestID = requestID;
            t_REQUESTS_SPEECH.SessionID = sessionID;
            t_REQUESTS_SPEECH.InsertDate = insertDate;
            t_REQUESTS_SPEECH.IsBlocked = isBlocked;
            return t_REQUESTS_SPEECH;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SpeechID
        {
            get
            {
                return _SpeechID;
            }
            set
            {
                if (_SpeechID != value)
                {
                    OnSpeechIDChanging(value);
                    ReportPropertyChanging("SpeechID");
                    _SpeechID = StructuralObject.SetValidValue(value, "SpeechID");
                    ReportPropertyChanged("SpeechID");
                    OnSpeechIDChanged();
                }
            }
        }
        private global::System.Int64 _SpeechID;
        partial void OnSpeechIDChanging(global::System.Int64 value);
        partial void OnSpeechIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestID
        {
            get
            {
                return _RequestID;
            }
            set
            {
                OnRequestIDChanging(value);
                ReportPropertyChanging("RequestID");
                _RequestID = StructuralObject.SetValidValue(value, false, "RequestID");
                ReportPropertyChanged("RequestID");
                OnRequestIDChanged();
            }
        }
        private global::System.String _RequestID;
        partial void OnRequestIDChanging(global::System.String value);
        partial void OnRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                OnSessionIDChanging(value);
                ReportPropertyChanging("SessionID");
                _SessionID = StructuralObject.SetValidValue(value, false, "SessionID");
                ReportPropertyChanged("SessionID");
                OnSessionIDChanged();
            }
        }
        private global::System.String _SessionID;
        partial void OnSessionIDChanging(global::System.String value);
        partial void OnSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private global::System.DateTime _InsertDate;
        partial void OnInsertDateChanging(global::System.DateTime value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBlocked
        {
            get
            {
                return _IsBlocked;
            }
            set
            {
                OnIsBlockedChanging(value);
                ReportPropertyChanging("IsBlocked");
                _IsBlocked = StructuralObject.SetValidValue(value, "IsBlocked");
                ReportPropertyChanged("IsBlocked");
                OnIsBlockedChanged();
            }
        }
        private global::System.Boolean _IsBlocked;
        partial void OnIsBlockedChanging(global::System.Boolean value);
        partial void OnIsBlockedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_REQUESTS_SPEECH_ASK_T_REQUESTS_SPEECH", "T_REQUESTS_SPEECH_ASK")]
        public EntityCollection<T_REQUESTS_SPEECH_ASK> T_REQUESTS_SPEECH_ASK
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<T_REQUESTS_SPEECH_ASK>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_SPEECH_ASK_T_REQUESTS_SPEECH", "T_REQUESTS_SPEECH_ASK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<T_REQUESTS_SPEECH_ASK>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_SPEECH_ASK_T_REQUESTS_SPEECH", "T_REQUESTS_SPEECH_ASK", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="T_REQUESTS_SPEECH_ASK")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_REQUESTS_SPEECH_ASK : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new T_REQUESTS_SPEECH_ASK object.
        /// </summary>
        /// <param name="askID">Initial value of the AskID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="expectedValue">Initial value of the ExpectedValue property.</param>
        /// <param name="insertDate">Initial value of the InsertDate property.</param>
        public static T_REQUESTS_SPEECH_ASK CreateT_REQUESTS_SPEECH_ASK(global::System.Int64 askID, global::System.Int32 value, global::System.Int32 expectedValue, global::System.DateTime insertDate)
        {
            T_REQUESTS_SPEECH_ASK t_REQUESTS_SPEECH_ASK = new T_REQUESTS_SPEECH_ASK();
            t_REQUESTS_SPEECH_ASK.AskID = askID;
            t_REQUESTS_SPEECH_ASK.Value = value;
            t_REQUESTS_SPEECH_ASK.ExpectedValue = expectedValue;
            t_REQUESTS_SPEECH_ASK.InsertDate = insertDate;
            return t_REQUESTS_SPEECH_ASK;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AskID
        {
            get
            {
                return _AskID;
            }
            set
            {
                if (_AskID != value)
                {
                    OnAskIDChanging(value);
                    ReportPropertyChanging("AskID");
                    _AskID = StructuralObject.SetValidValue(value, "AskID");
                    ReportPropertyChanged("AskID");
                    OnAskIDChanged();
                }
            }
        }
        private global::System.Int64 _AskID;
        partial void OnAskIDChanging(global::System.Int64 value);
        partial void OnAskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int32 _Value;
        partial void OnValueChanging(global::System.Int32 value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpectedValue
        {
            get
            {
                return _ExpectedValue;
            }
            set
            {
                OnExpectedValueChanging(value);
                ReportPropertyChanging("ExpectedValue");
                _ExpectedValue = StructuralObject.SetValidValue(value, "ExpectedValue");
                ReportPropertyChanged("ExpectedValue");
                OnExpectedValueChanged();
            }
        }
        private global::System.Int32 _ExpectedValue;
        partial void OnExpectedValueChanging(global::System.Int32 value);
        partial void OnExpectedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private global::System.DateTime _InsertDate;
        partial void OnInsertDateChanging(global::System.DateTime value);
        partial void OnInsertDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdsCaptcha_ImagesModel", "FK_T_REQUESTS_SPEECH_ASK_T_REQUESTS_SPEECH", "T_REQUESTS_SPEECH")]
        public T_REQUESTS_SPEECH T_REQUESTS_SPEECH
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_REQUESTS_SPEECH>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_SPEECH_ASK_T_REQUESTS_SPEECH", "T_REQUESTS_SPEECH").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_REQUESTS_SPEECH>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_SPEECH_ASK_T_REQUESTS_SPEECH", "T_REQUESTS_SPEECH").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<T_REQUESTS_SPEECH> T_REQUESTS_SPEECHReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<T_REQUESTS_SPEECH>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_SPEECH_ASK_T_REQUESTS_SPEECH", "T_REQUESTS_SPEECH");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<T_REQUESTS_SPEECH>("AdsCaptcha_ImagesModel.FK_T_REQUESTS_SPEECH_ASK_T_REQUESTS_SPEECH", "T_REQUESTS_SPEECH", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdsCaptcha_ImagesModel", Name="V_Exchange_Websites")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_Exchange_Websites : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_Exchange_Websites object.
        /// </summary>
        /// <param name="website_Id">Initial value of the Website_Id property.</param>
        public static V_Exchange_Websites CreateV_Exchange_Websites(global::System.Int32 website_Id)
        {
            V_Exchange_Websites v_Exchange_Websites = new V_Exchange_Websites();
            v_Exchange_Websites.Website_Id = website_Id;
            return v_Exchange_Websites;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Website_Id
        {
            get
            {
                return _Website_Id;
            }
            set
            {
                if (_Website_Id != value)
                {
                    OnWebsite_IdChanging(value);
                    ReportPropertyChanging("Website_Id");
                    _Website_Id = StructuralObject.SetValidValue(value, "Website_Id");
                    ReportPropertyChanged("Website_Id");
                    OnWebsite_IdChanged();
                }
            }
        }
        private global::System.Int32 _Website_Id;
        partial void OnWebsite_IdChanging(global::System.Int32 value);
        partial void OnWebsite_IdChanged();

        #endregion

    }

    #endregion

}
